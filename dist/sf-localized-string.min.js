angular.module("templates",[]).run(["$templateCache",function(l){l.put("src/templates/sf-localized-string.html",'<div class="form-group">\n  <!--<pre>{{form|json}}</pre>-->\n  <label>{{form.title}}</label>\n  <div schema-validate="form" sf-field-model>\n    <div ng-if="form.schema.format === \'localizedString\'"\n         ng-class="{\'form-group\' : !$last, \'input-group\' : form.locales.length > 1}"\n         ng-repeat="locale in form.locales">\n      <span class="input-group-addon"\n            ng-if="form.locales.length > 1">{{locale}}</span>\n      <input type="text" class="form-control"\n             sf-field-model="replaceAll" ng-model="$$value$$[locale]"></input>\n    </div>\n    <div ng-if="form.schema.format === \'localizedTextArea\'"\n         ng-class="{\'form-group\' : !$last, \'input-group\' : form.locales.length > 1}"\n         ng-repeat="locale in form.locales">\n      <span class="input-group-addon"\n            ng-if="form.locales.length > 1">{{locale}}</span>\n      <textarea class="form-control"\n                sf-field-model="replaceAll" ng-model="$$value$$[locale]"\n                rows="{{form.rows ? form.rows : 5}}"></textarea>\n    </div>\n  </div>\n  <span class="help-block" sf-message="form.description"></span>\n</div>\n')}]),angular.module("sfLocalizedString",["schemaForm","templates"]).config(function(l,e,o,a){var n=function(e,o,n){if("object"===o.type&&("localizedString"==o.format||"localizedTextArea"==o.format)){var t=l.stdFormObj(e,o,n);return t.key=n.path,t.type="localizedstring",t.locales||(t.locales=["en"]),n.lookup[a.stringify(n.path)]=t,t}};l.defaults.object.unshift(n),e.defineAddOn("bootstrapDecorator","localizedstring","src/templates/sf-localized-string.html",o.stdBuilders)});