angular.module("templates",[]).run(["$templateCache",function(o){o.put("src/templates/sf-localized-string.html",'<div class="form-group" ng-class="{\'has-error\': hasError()}" schema-validate="form" sf-field-model >\n  <!--<pre>{{form|json}}</pre>-->\n  <label class="control-label" ng-show="showTitle()">{{form.title}}</label>\n  <div ng-if="form.schema.format === \'localizedString\'"\n       ng-class="{\'form-group\' : !$last, \'input-group\' : form.showLocales || form.locales.length > 1}"\n       ng-repeat="locale in form.locales">\n    <span class="input-group-addon"\n          ng-if="form.showLocales || form.locales.length > 1">{{locale}}</span>\n    <input type="text" class="form-control"\n           sf-field-model="replaceAll" ng-model="$$value$$[locale]"></input>\n  </div>\n  <div ng-if="form.schema.format === \'localizedTextArea\'"\n       ng-class="{\'form-group\' : !$last, \'input-group\' : form.showLocales || form.locales.length > 1}"\n       ng-repeat="locale in form.locales">\n    <span class="input-group-addon"\n          ng-if="form.showLocales || form.locales.length > 1">{{locale}}</span>\n    <textarea class="form-control"\n              sf-field-model="replaceAll" ng-model="$$value$$[locale]"\n              rows="{{form.rows ? form.rows : 5}}"></textarea>\n  </div>\n  <span class="help-block" sf-message="form.description"></span>\n</div>\n')}]),angular.module("sfLocalizedString",["schemaForm","templates"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(o,l,e,a){var r=function(l,e,r){if("object"===e.type&&("localizedString"==e.format||"localizedTextArea"==e.format)){var s=o.stdFormObj(l,e,r);return s.key=r.path,s.type="localizedstring",s.locales||(s.locales=["en"]),r.lookup[a.stringify(r.path)]=s,s}};o.defaults.object.unshift(r),l.defineAddOn("bootstrapDecorator","localizedstring","src/templates/sf-localized-string.html",e.stdBuilders)}]);