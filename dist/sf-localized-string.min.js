angular.module("sfLocalizedStringTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-localized-string.html",'<div class="form-group"\n     ng-controller="LocalizedStringController"\n     ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"\n     schema-validate="form" sf-field-model >\n  <!--<pre>{{form|json}}</pre>-->\n  <label class="control-label" ng-show="showTitle()">{{form.title}}</label>\n  <div ng-if="!form.rows || form.rows <= 1"\n       ng-class="{\'form-group\' : !$last, \'input-group\' : form.showLocales || form.locales.length > 1}"\n       ng-repeat="locale in form.locales">\n    <span class="input-group-addon"\n          ng-if="form.showLocales || form.locales.length > 1">{{locale}}</span>\n    <input type="text" class="form-control"\n           sf-field-model="replaceAll" ng-model="$$value$$[locale]"></input>\n  </div>\n  <div ng-if="form.rows && form.rows > 1"\n       ng-class="{\'form-group\' : !$last, \'input-group\' : form.showLocales || form.locales.length > 1}"\n       ng-repeat="locale in form.locales">\n    <span class="input-group-addon"\n          ng-if="form.showLocales || form.locales.length > 1">{{locale}}</span>\n    <textarea class="form-control"\n              sf-field-model="replaceAll" ng-model="$$value$$[locale]"\n              rows="{{form.rows ? form.rows : 5}}"></textarea>\n  </div>\n  <span class="help-block" sf-message="form.description"></span>\n</div>\n')}]),angular.module("sfLocalizedString",["schemaForm","sfLocalizedStringTemplates"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,o,l,r){var n=function(o,l,n){if("object"===l.type&&"localizedString"==l.format){var a=e.stdFormObj(o,l,n);return a.key=n.path,a.type="localizedstring",a.locales||(a.locales=["en"]),a.validationMessage={completed:"All localized fields must be completed"},a.$validators={completed:function(e){if(e&&0!==Object.keys(e).length){var o=a.locales.map(function(o){return e.hasOwnProperty(o)?1:0}).reduce(function(e,o){return e+o});return a.locales.length===o}return!0}},n.lookup[r.stringify(n.path)]=a,a}};e.defaults.object.unshift(n),o.defineAddOn("bootstrapDecorator","localizedstring","src/templates/sf-localized-string.html",l.stdBuilders)}]).controller("LocalizedStringController",["$scope",function(e){e.$watch("ngModel.$modelValue",function(){e.ngModel.$validate?(e.ngModel.$validate(),e.ngModel.$invalid&&(e.ngModel.$dirty=!0,e.ngModel.$pristine=!1)):e.ngModel.$setViewValue(ngModel.$viewValue)},!0)}]);