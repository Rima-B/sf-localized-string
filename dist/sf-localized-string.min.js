angular.module("sfLocalizedStringTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-localized-string.html",'<div class="form-group"\n     ng-controller="LocalizedStringController"\n     ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"\n     schema-validate="form" sf-field-model >\n  <!--<pre>{{form|json}}</pre>-->\n  <label class="control-label" ng-show="showTitle()">{{form.title}}</label>\n  <div class="pull-right dropdown" ng-class="{\'open\': open}" ng-if="form.locales && form.locales.length > 1">\n    <a href class="dropdown-toggle" ng-click="toggleDropdown()">{{selectedLocale}} <span class="caret"></span></a>\n    <ul class="dropdown-menu">\n      <li ng-repeat="loc in form.locales"><a href ng-click="selectLocale(loc)">{{loc}}</a></li>\n    </ul>\n  </div>\n  <div ng-if="!form.rows || form.rows <= 1"\n       ng-class="{\'form-group\' : !$last}">\n    <input type="text" class="form-control"\n           sf-field-model="replaceAll" ng-model="$$value$$[locale]"\n           ng-repeat="locale in form.locales"\n           ng-show="locale === selectedLocale"/>\n  </div>\n  <div ng-if="form.rows && form.rows > 1"\n       ng-class="{\'form-group\' : !$last">\n    <textarea class="form-control"\n              sf-field-model="replaceAll" ng-model="$$value$$[locale]"\n              rows="{{form.rows ? form.rows : 5}}"\n              ng-repeat="locale in form.locales"\n              ng-show="locale === selectedLocale"></textarea>\n  </div>\n  <span class="help-block" sf-message="form.description"></span>\n</div>\n')}]),angular.module("sfLocalizedString",["schemaForm","sfLocalizedStringTemplates"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,l,o,n){var r=function(l,o,r){if("object"===o.type&&"localizedString"==o.format){var a=e.stdFormObj(l,o,r);return a.key=r.path,a.type="localizedstring",a.locales||(a.locales=["en"]),a.validationMessage={completed:"All localized fields must be completed"},a.$validators={completed:function(e){if(e&&0!==Object.keys(e).length){var l=a.locales.map(function(l){return e.hasOwnProperty(l)?1:0}).reduce(function(e,l){return e+l});return a.locales.length===l}return!0}},r.lookup[n.stringify(r.path)]=a,a}};e.defaults.object.unshift(r),l.defineAddOn("bootstrapDecorator","localizedstring","src/templates/sf-localized-string.html",o.stdBuilders)}]).controller("LocalizedStringController",["$scope",function(e){e.$watch("ngModel.$modelValue",function(){e.ngModel.$validate?(e.ngModel.$validate(),e.ngModel.$invalid&&(e.ngModel.$dirty=!0,e.ngModel.$pristine=!1)):e.ngModel.$setViewValue(ngModel.$viewValue)},!0),e.$watch("form",function(){e.selectedLocale=e.form?e.form.locales[0]:""}),e.selectLocale=function(l){e.selectedLocale=l,e.open=!1},e.toggleDropdown=function(){e.open=!e.open},e.open=!1}]);